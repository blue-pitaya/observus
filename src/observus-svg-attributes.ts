import { AttrStringValue, attr } from "./observus-core";

// Attrs generated from scalatags project "https://github.com/com-lihaoyi/scalatags"

type A = AttrStringValue;

export default {
  accentHeight: (v: A) => attr("h", v, "setAttrFn"),
  accumulate: (v: A) => attr("accumulate", v, "setAttrFn"),
  additive: (v: A) => attr("additive", v, "setAttrFn"),
  alignmentBaseline: (v: A) => attr("b", v, "setAttrFn"),
  ascent: (v: A) => attr("ascent", v, "setAttrFn"),
  attributeName: (v: A) => attr("attributeName", v, "setAttrFn"),
  attributeType: (v: A) => attr("attributeType", v, "setAttrFn"),
  azimuth: (v: A) => attr("azimuth", v, "setAttrFn"),
  baseFrequency: (v: A) => attr("baseFrequency", v, "setAttrFn"),
  baselineShift: (v: A) => attr("s", v, "setAttrFn"),
  begin: (v: A) => attr("begin", v, "setAttrFn"),
  bias: (v: A) => attr("bias", v, "setAttrFn"),
  calcMode: (v: A) => attr("calcMode", v, "setAttrFn"),
  // changed to "cls"
  cls: (v: A) => attr("class", v, "setAttrFn"),
  clip: (v: A) => attr("clip", v, "setAttrFn"),
  clipPath: (v: A) => attr("p", v, "setAttrFn"),
  clipPathUnits: (v: A) => attr("clipPathUnits", v, "setAttrFn"),
  clipRule: (v: A) => attr("r", v, "setAttrFn"),
  color: (v: A) => attr("color", v, "setAttrFn"),
  colorInterpolation: (v: A) => attr("i", v, "setAttrFn"),
  colorInterpolationFilters: (v: A) => attr("f", v, "setAttrFn"),
  colorProfile: (v: A) => attr("p", v, "setAttrFn"),
  colorRendering: (v: A) => attr("r", v, "setAttrFn"),
  contentScriptType: (v: A) => attr("contentScriptType", v, "setAttrFn"),
  contentStyleType: (v: A) => attr("contentStyleType", v, "setAttrFn"),
  cursor: (v: A) => attr("cursor", v, "setAttrFn"),
  cx: (v: A) => attr("cx", v, "setAttrFn"),
  cy: (v: A) => attr("cy", v, "setAttrFn"),
  d: (v: A) => attr("d", v, "setAttrFn"),
  diffuseConstant: (v: A) => attr("diffuseConstant", v, "setAttrFn"),
  direction: (v: A) => attr("direction", v, "setAttrFn"),
  display: (v: A) => attr("display", v, "setAttrFn"),
  divisor: (v: A) => attr("divisor", v, "setAttrFn"),
  dominantBaseline: (v: A) => attr("b", v, "setAttrFn"),
  dur: (v: A) => attr("dur", v, "setAttrFn"),
  dx: (v: A) => attr("dx", v, "setAttrFn"),
  dy: (v: A) => attr("dy", v, "setAttrFn"),
  edgeMode: (v: A) => attr("edgeMode", v, "setAttrFn"),
  elevation: (v: A) => attr("elevation", v, "setAttrFn"),
  end: (v: A) => attr("end", v, "setAttrFn"),
  externalResourcesRequired: (v: A) =>
    attr("externalResourcesRequired", v, "setAttrFn"),
  fill: (v: A) => attr("fill", v, "setAttrFn"),
  fillOpacity: (v: A) => attr("o", v, "setAttrFn"),
  fillRule: (v: A) => attr("r", v, "setAttrFn"),
  filter: (v: A) => attr("filter", v, "setAttrFn"),
  filterRes: (v: A) => attr("filterRes", v, "setAttrFn"),
  filterUnits: (v: A) => attr("filterUnits", v, "setAttrFn"),
  floodColor: (v: A) => attr("c", v, "setAttrFn"),
  floodOpacity: (v: A) => attr("o", v, "setAttrFn"),
  fontFamily: (v: A) => attr("f", v, "setAttrFn"),
  fontSize: (v: A) => attr("s", v, "setAttrFn"),
  fontSizeAdjust: (v: A) => attr("a", v, "setAttrFn"),
  fontStretch: (v: A) => attr("s", v, "setAttrFn"),
  fontVariant: (v: A) => attr("v", v, "setAttrFn"),
  fontWeight: (v: A) => attr("w", v, "setAttrFn"),
  from: (v: A) => attr("from", v, "setAttrFn"),
  fx: (v: A) => attr("fx", v, "setAttrFn"),
  fy: (v: A) => attr("fy", v, "setAttrFn"),
  gradientTransform: (v: A) => attr("gradientTransform", v, "setAttrFn"),
  gradientUnits: (v: A) => attr("gradientUnits", v, "setAttrFn"),
  height: (v: A) => attr("height", v, "setAttrFn"),
  imageRendering: (v: A) => attr("imageRendering", v, "setAttrFn"),
  id: (v: A) => attr("id", v, "setAttrFn"),
  // add "Attr" suffix
  inAttr: (v: A) => attr("in", v, "setAttrFn"),
  in2: (v: A) => attr("in2", v, "setAttrFn"),
  k1: (v: A) => attr("k1", v, "setAttrFn"),
  k2: (v: A) => attr("k2", v, "setAttrFn"),
  k3: (v: A) => attr("k3", v, "setAttrFn"),
  k4: (v: A) => attr("k4", v, "setAttrFn"),
  kernelMatrix: (v: A) => attr("kernelMatrix", v, "setAttrFn"),
  kernelUnitLength: (v: A) => attr("kernelUnitLength", v, "setAttrFn"),
  kerning: (v: A) => attr("kerning", v, "setAttrFn"),
  keySplines: (v: A) => attr("keySplines", v, "setAttrFn"),
  keyTimes: (v: A) => attr("keyTimes", v, "setAttrFn"),
  letterSpacing: (v: A) => attr("s", v, "setAttrFn"),
  lightingColor: (v: A) => attr("c", v, "setAttrFn"),
  limitingConeAngle: (v: A) => attr("limitingConeAngle", v, "setAttrFn"),
  local: (v: A) => attr("local", v, "setAttrFn"),
  markerEnd: (v: A) => attr("e", v, "setAttrFn"),
  markerMid: (v: A) => attr("m", v, "setAttrFn"),
  markerStart: (v: A) => attr("s", v, "setAttrFn"),
  markerHeight: (v: A) => attr("markerHeight", v, "setAttrFn"),
  markerUnits: (v: A) => attr("markerUnits", v, "setAttrFn"),
  markerWidth: (v: A) => attr("markerWidth", v, "setAttrFn"),
  maskContentUnits: (v: A) => attr("maskContentUnits", v, "setAttrFn"),
  maskUnits: (v: A) => attr("maskUnits", v, "setAttrFn"),
  mask: (v: A) => attr("mask", v, "setAttrFn"),
  max: (v: A) => attr("max", v, "setAttrFn"),
  min: (v: A) => attr("min", v, "setAttrFn"),
  mode: (v: A) => attr("mode", v, "setAttrFn"),
  numOctaves: (v: A) => attr("numOctaves", v, "setAttrFn"),
  offset: (v: A) => attr("offset", v, "setAttrFn"),
  orient: (v: A) => attr("orient", v, "setAttrFn"),
  opacity: (v: A) => attr("opacity", v, "setAttrFn"),
  operator: (v: A) => attr("operator", v, "setAttrFn"),
  order: (v: A) => attr("order", v, "setAttrFn"),
  overflow: (v: A) => attr("overflow", v, "setAttrFn"),
  paintOrder: (v: A) => attr("o", v, "setAttrFn"),
  pathLength: (v: A) => attr("pathLength", v, "setAttrFn"),
  patternContentUnits: (v: A) => attr("patternContentUnits", v, "setAttrFn"),
  patternTransform: (v: A) => attr("patternTransform", v, "setAttrFn"),
  patternUnits: (v: A) => attr("patternUnits", v, "setAttrFn"),
  pointerEvents: (v: A) => attr("e", v, "setAttrFn"),
  points: (v: A) => attr("points", v, "setAttrFn"),
  pointsAtX: (v: A) => attr("pointsAtX", v, "setAttrFn"),
  pointsAtY: (v: A) => attr("pointsAtY", v, "setAttrFn"),
  pointsAtZ: (v: A) => attr("pointsAtZ", v, "setAttrFn"),
  preserveAlpha: (v: A) => attr("preserveAlpha", v, "setAttrFn"),
  preserveAspectRatio: (v: A) => attr("preserveAspectRatio", v, "setAttrFn"),
  primitiveUnits: (v: A) => attr("primitiveUnits", v, "setAttrFn"),
  r: (v: A) => attr("r", v, "setAttrFn"),
  radius: (v: A) => attr("radius", v, "setAttrFn"),
  refX: (v: A) => attr("refX", v, "setAttrFn"),
  refY: (v: A) => attr("refY", v, "setAttrFn"),
  repeatCount: (v: A) => attr("repeatCount", v, "setAttrFn"),
  repeatDur: (v: A) => attr("repeatDur", v, "setAttrFn"),
  requiredFeatures: (v: A) => attr("requiredFeatures", v, "setAttrFn"),
  restart: (v: A) => attr("restart", v, "setAttrFn"),
  result: (v: A) => attr("result", v, "setAttrFn"),
  rx: (v: A) => attr("rx", v, "setAttrFn"),
  ry: (v: A) => attr("ry", v, "setAttrFn"),
  scale: (v: A) => attr("scale", v, "setAttrFn"),
  seed: (v: A) => attr("seed", v, "setAttrFn"),
  shapeRendering: (v: A) => attr("r", v, "setAttrFn"),
  specularConstant: (v: A) => attr("specularConstant", v, "setAttrFn"),
  specularExponent: (v: A) => attr("specularExponent", v, "setAttrFn"),
  spreadMethod: (v: A) => attr("spreadMethod", v, "setAttrFn"),
  stdDeviation: (v: A) => attr("stdDeviation", v, "setAttrFn"),
  stitchTiles: (v: A) => attr("stitchTiles", v, "setAttrFn"),
  stopColor: (v: A) => attr("c", v, "setAttrFn"),
  stopOpacity: (v: A) => attr("o", v, "setAttrFn"),
  stroke: (v: A) => attr("stroke", v, "setAttrFn"),
  strokeDasharray: (v: A) => attr("d", v, "setAttrFn"),
  strokeDashoffset: (v: A) => attr("d", v, "setAttrFn"),
  strokeLinecap: (v: A) => attr("l", v, "setAttrFn"),
  strokeLinejoin: (v: A) => attr("l", v, "setAttrFn"),
  strokeMiterlimit: (v: A) => attr("m", v, "setAttrFn"),
  strokeOpacity: (v: A) => attr("o", v, "setAttrFn"),
  strokeWidth: (v: A) => attr("w", v, "setAttrFn"),
  style: (v: A) => attr("style", v, "setAttrFn"),
  surfaceScale: (v: A) => attr("surfaceScale", v, "setAttrFn"),
  targetX: (v: A) => attr("targetX", v, "setAttrFn"),
  targetY: (v: A) => attr("targetY", v, "setAttrFn"),
  textAnchor: (v: A) => attr("a", v, "setAttrFn"),
  textDecoration: (v: A) => attr("d", v, "setAttrFn"),
  textRendering: (v: A) => attr("r", v, "setAttrFn"),
  to: (v: A) => attr("to", v, "setAttrFn"),
  transform: (v: A) => attr("transform", v, "setAttrFn"),
  type: (v: A) => attr("type", v, "setAttrFn"),
  values: (v: A) => attr("values", v, "setAttrFn"),
  viewBox: (v: A) => attr("viewBox", v, "setAttrFn"),
  visibility: (v: A) => attr("visibility", v, "setAttrFn"),
  width: (v: A) => attr("width", v, "setAttrFn"),
  wordSpacing: (v: A) => attr("s", v, "setAttrFn"),
  writingMode: (v: A) => attr("m", v, "setAttrFn"),
  x: (v: A) => attr("x", v, "setAttrFn"),
  x1: (v: A) => attr("x1", v, "setAttrFn"),
  x2: (v: A) => attr("x2", v, "setAttrFn"),
  xChannelSelector: (v: A) => attr("xChannelSelector", v, "setAttrFn"),
  xlinkRole: (v: A) => attr("xlink:role", v, "setAttrFn"),
  xlinkRitle: (v: A) => attr("xlink:title", v, "setAttrFn"),
  xmlSpace: (v: A) => attr("xml:space", v, "setAttrFn"),
  xmlns: (v: A) => attr("xmlns", v, "setAttrFn"),
  xmlnsXlink: (v: A) => attr("xmlns:xlink", v, "setAttrFn"),
  y: (v: A) => attr("y", v, "setAttrFn"),
  y1: (v: A) => attr("y1", v, "setAttrFn"),
  y2: (v: A) => attr("y2", v, "setAttrFn"),
  yChannelSelector: (v: A) => attr("yChannelSelector", v, "setAttrFn"),
  z: (v: A) => attr("z", v, "setAttrFn"),
};
